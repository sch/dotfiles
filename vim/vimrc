set nocompatible                  " Must come first because it changes other options.
filetype off                      " required!
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" Bundles {
" let Vundle manage Vundle
Bundle 'gmarik/vundle'

" VUNDLE GITHUB REPOS
Bundle 'tpope/vim-fugitive'
Bundle 'wincent/Command-T'
Bundle 'airblade/vim-rooter'
Bundle 'c9s/bufexplorer'

" START SNIPMATE
Bundle 'garbas/vim-snipmate'
Bundle 'MarcWeber/vim-addon-mw-utils'
Bundle 'vim-scripts/tlib'
Bundle 'honza/snipmate-snippets'
" END SNIPMATE
" Bundle 'shougo/neocomplcache'

Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/syntastic'
Bundle 'godlygeek/tabular'
Bundle 'tomtom/tcomment_vim'
Bundle 'juvenn/mustache.vim'
Bundle 'kien/ctrlp.vim'
Bundle 'ervandew/supertab'
Bundle 'tpope/vim-ragtag'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'jnwhiteh/vim-golang'
" Bundle 'Lokaltog/vim-powerline'
Bundle 'wlangstroth/vim-haskell'
Bundle 'pbrisbin/html-template-syntax'
Bundle 'ludovicPelle/vim-xdebug'
Bundle 'altercation/vim-colors-solarized'
Bundle 'groenewege/vim-less'
Bundle 'sjl/gundo.vim'
" Bundle 'myusuf3/numbers.vim'
Bundle 'spf13/PIV'
Bundle 'Lokaltog/vim-easymotion.git'
Bundle 'majutsushi/tagbar'
" Bundle 'editorconfig/editorconfig-vim'
Bundle 'wookiehangover/jshint.vim'
" Bundle 'frerich/unicode-haskell'
Bundle 'Lokaltog/vim-distinguished'
" }

filetype plugin indent on         " Turn on file type detection.
" filetype plugin on                " ... but don't use indentation settings set by plugins

syntax enable                     " Turn on syntax highlighting.
set encoding=utf-8                " Duh

runtime macros/matchit.vim        " Load the matchit plugin (built-in).

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set mouse=a

set autowrite                     " Save before commands
au FocusLost * silent! wa         " Textmate-style save when focus is lost
set autowriteall                  " Save when switching buffers

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest,full    " Complete files like a shell.

" use regex in search
nnoremap / /\v
vnoremap / /\v
set gdefault                      " set global substitution to searches
set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.
set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set grepprg=ack\ -a

set number                        " Show line numbers.
" set relativenumber                " Show distance away from current line
set ruler                         " Show cursor position.
set wrap                          " Turn on line wrapping.
set linebreak                     " Don't split words when wrapping
set textwidth=79                  " Autobreak after 79 char/
set formatoptions=qrn1
set colorcolumn=85
set scrolloff=5                   " Show 5 lines of context around the cursor.

set t_Co=256                      " Explicitly tell Vim that the terminal supports 256 colors
set title                         " Set the terminal's title
set laststatus=2                  " Show the status line all the time
" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{fugitive#statusline()}%{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

" use solarized scheme, background can be 'light' or 'dark'
" colorscheme solarized
" set background=dark
set visualbell t_vb=              " No beeping


set list
set listchars=tab:▸\ ,eol:¬

" set nowritebackup                 " And again.
set noswapfile                    " FUCK swapfiles, i think
set switchbuf=useopen             " don't reopen already opened buffers

set backup                        " Backups are nice ...
set backupdir-=.
set backupdir^=~/tmp,/tmp

if has('persistent_undo')
  set undofile                    " So is persistent undo ...
  set undodir=~/.vim/undo          " Directory for these files
  set undolevels=1000             " Maximum number of changes that can be undone
  set undoreload=10000            " Maximum number lines to save for undo on a buffer reload
endif

set autoindent                    " Sane indentation after carriage return
set tabstop=2                     " Global tab width.
set shiftwidth=2                  " And again, related.
"set shiftround                    " Use multiples of shiftwidth when using > and <
set expandtab                     " Use spaces instead of tabs
set showmatch                     " set show matching parenthesis
set smarttab                      " insert tabs on the start of a line according to shiftwidth, not tabstop
set clipboard+=unnamed            " Make yanking possible across windows

autocmd FileType asm setlocal ts=4 sts=0 sw=0 noexpandtab
autocmd FileType html,css,scss,ruby,pml,yaml,coffee,vim setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType python,javascript setlocal ts=4 sts=4 sw=4 noexpandtab
autocmd BufNewFile,BufRead Rakefile,Capfile,Gemfile,Termfile,config.ru setfiletype ruby
" autocmd FileType ruby :Abolish -buffer initialise initialize

let mapleader = ","                "easier leader
" Speed up buffer switching
map <C-k> <C-W>k
map <C-j> <C-W>j
map <C-h> <C-W>h
map <C-l> <C-W>l
" training wheels
" inoremap  <Up>     <NOP>
" inoremap  <Down>   <NOP>
" inoremap  <Left>   <NOP>
" inoremap  <Right>  <NOP>

" L is easier to type, and I never use the default behavior.
noremap L $

" Check extension of a new file, insert the appropriate template
autocmd! BufNewFile * silent! 0r ~/.vim/skel/tmpl.%:e

" emacs style ctrl e/a for beginning/end of line
imap <C-e> <C-o>A
imap <C-a> <C-o>I

" Make j and k work on wrapped lines
nnoremap j gj
nnoremap k gk

" Yank from the cursor to the end of the line, to be consistent with C and D.
nnoremap Y y$

" tab -> nearest enclosure
nmap <tab> %
vmap <tab> %

" Clear highlighted search
nmap <silent> <leader>/ :nohlsearch<CR>

" markdown-style row of === under current line
nnoremap <leader>1 yypVr=
nnoremap <leader>2 yypVr-

" check the current folder for ctags, keep going up in directories if not found
set tags=tags;/

" Automatic fold settings for specific files. Uncomment to use.
autocmd FileType ruby setlocal foldmethod=syntax
autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2

" Some helpers to edit mode
" http://vimcasts.org/e/14
cnoremap %% <C-R>=expand('%:h').'/'<cr>
map <leader>e1 :e %%
map <leader>e2 :sp %%
map <leader>e3 :vsp %%

" Haskell compiler
" au BufEnter *.hs compiler ghc

" For the MakeGreen plugin and Ruby RSpec. Uncomment to use.
" autocmd BufNewFile,BufRead *_spec.rb compiler rspec
"

""""""""""""""""""""
" POWERLINE SETTINGS
""""""""""""""""""""
" let g:Powerline_symbols = 'fancy'
" let g:Powerline_theme = 'skwp'
" let g:Powerline_colorscheme = 'skwp'

"""""" END POWERLINE 
""""""""""""""""""""

" Let Syntastic jump to bad lines on save
let g:syntastic_auto_jump=1

" Bubble single lines
nmap <C-Up> ddkP
nmap <C-Down> ddp
" Bubble multiple lines
vmap <C-Up> xkP`[V`]
vmap <C-Down> xp`[V`]

" Use Q for formatting the current paragraph (or selection)
vmap Q gq
nmap Q gqap

" nerd tree shortcut
nnoremap <leader>. :NERDTreeToggle<cr>

" bufexplorer shortcut
nnoremap <return> :BufExplorer<cr>

" open up Marked
:nnoremap <leader>m :silent !open -a Marked.app '%:p'<cr>

" Quick editing of .vimrc and of snippets
nnoremap <leader>ev :e $MYVIMRC<cr>
nnoremap <leader>es <C-w>s<C-w>j<C-w>L:e ~/.vim/bundle/snipmate-garbas/snippets<cr>

" make a vertical split and switch over to it
nnoremap <leader>w <C-w>v<C-w>l

" Escape normal mode quicker
inoremap jj <ESC>

" set ctrlP's working directory to a git root
let g:ctrlp_working_path_mode = 2

" Controversial...swap colon and semicolon for easier commands
nnoremap ; :
vnoremap ; :
" nb: don't remap ; because it breaks plugins

" Source the vimrc file after saving it
if has("autocmd")
  autocmd bufwritepost .vimrc source $MYVIMRC
endif

" =============================================================================
" The treasure trove that are these configs mostly came from:
" http://stevelosh.com/blog/2010/09/coming-home-to-vim/
" https://github.com/gmarik/vimfiles/blob/master/vimrc
" https://github.com/durdn/cfg/blob/master/.vimrc
" https://github.com/factorylabs/vimfiles
" https://github.com/oryband/dotvim/blob/master/vimrc
" 
" nnoremap should be used whenever possible, because most mappings shouldn't be
" recursive
