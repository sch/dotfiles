" Example Vim configuration.
" Copy or symlink to ~/.vimrc or ~/_vimrc.
" Update on-the-fly with ':source $MYVIMRC'

set nocompatible                  " Must come first because it changes other options.

silent! call pathogen#runtime_append_all_bundles()
silent! call pathogen#helptags()

syntax enable                     " Turn on syntax highlighting.
filetype plugin indent on         " Turn on file type detection.
filetype plugin on

runtime macros/matchit.vim        " Load the matchit plugin (built-in).

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.
set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set number                        " Show line numbers.
set ruler                         " Show cursor position.
set wrap                          " Turn on line wrapping.
set scrolloff=5                   " Show 5 lines of context around the cursor.

set title                         " Set the terminal's title
set laststatus=2                  " Show the status line all the time
" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{fugitive#statusline()}%{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P
" use solarized scheme, background can be 'light' or 'dark'
set background=light
colorscheme solarized

set visualbell t_vb=              " No beeping

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set noswapfile                    " FUCK swapfiles
set switchbuf=useopen             " don't reopen already opened buffers

" UNCOMMENT TO USE
set tabstop=2                     " Global tab width.
set shiftwidth=2                  " And again, related.
"set shiftround                    " Use multiples of shiftwidth when using > and <
set expandtab                     " Use spaces instead of tabs
set showmatch                     " set show matching parenthesis
set smarttab                      " insert tabs on the start of a line according to shiftwidth, not tabstop

" show hidded chars
"set list
"set listchars=tab:>.,trail:.,extends:#,nbsp:.
"autocmd filetype html,xml set listchars-=tab:>.

autocmd FileType html,css,scss,ruby,pml,yaml,coffee,vim setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType python,javascript setlocal ts=4 sts=4 sw=4 noexpandtab
autocmd BufNewFile,BufRead Rakefile,Capfile,Gemfile,Termfile,config.ru setfiletype ruby
autocmd FileType ruby :Abolish -buffer initialise initialize

let mapleader = ","                "easier leader
"buffnav
"map <Leader>, <C-^>
" Speed up buffer switching
map <C-k> <C-W>k
map <C-j> <C-W>j
map <C-h> <C-W>h
map <C-l> <C-W>l

" command t
map <Leader>ff :CommandT<CR>

" emacs style ctrl e/a for beginning/end of line
imap <C-e> <C-o>A
imap <C-a> <C-o>I

nnoremap j gj
nnoremap k gk
" tab -> nearest enclosure
nmap <tab> %
vmap <tab> %

" Automatic fold settings for specific files. Uncomment to use.
"autocmd FileType ruby setlocal foldmethod=syntax
" autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2

" For the MakeGreen plugin and Ruby RSpec. Uncomment to use.
"autocmd BufNewFile,BufRead *_spec.rb compiler rspec

" Bubble single lines
nmap <C-Up> ddkP
nmap <C-Down> ddp
" Bubble multiple lines
vmap <C-Up> xkP`[V`]
vmap <C-Down> xp`[V`]

" Use Q for formatting the current paragraph (or selection)
vmap Q gq
nmap Q gqap

" nerd tree shortcut
map <Leader>, :NERDTree<CR>

" leader v to edit vimrc
nmap <Leader>v :e $MYVIMRC<CR>

" Controversial...swap colon and semicolon for easier commands
nnoremap ; :
nnoremap : ;
vnoremap ; :
vnoremap : ;

" Source the vimrc file after saving it
if has("autocmd")
  autocmd bufwritepost .vimrc source $MYVIMRC
endif

